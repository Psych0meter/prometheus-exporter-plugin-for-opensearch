name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger with Tags, starting with "v"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Java 21
      - name: Set up Java
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: '21'

      # Export JAVA_HOME to be used in later steps
      - name: Export JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java.outputs.path }}" >> $GITHUB_ENV

      # Build the project
      - name: Build project
        run: |
          ./gradlew clean build --refresh-dependencies -x yamlRestTest

      # Save the artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build/distributions/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download build artifacts
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      # Set up Java 21 (again for this job)
      - name: Set up Java
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: '21'

      # Export JAVA_HOME for use by the gradle-properties action
      - name: Export JAVA_HOME
        run: echo "JAVA_HOME=${{ steps.setup-java.outputs.path }}" >> $GITHUB_ENV

      # Extract version from gradle.properties
      - uses: guillermocalvo/gradle-properties@v3
        id: properties
        with:
          output_file: ${{ github.output }}
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Auto generated release for ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # Upload artifact to Release
      - name: Upload artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: prometheus-exporter-${{ steps.properties.outputs.version }}.zip
          asset_name: prometheus-exporter-${{ steps.properties.outputs.version }}.zip
          asset_content_type: application/zip
